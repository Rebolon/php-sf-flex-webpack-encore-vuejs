{
  "name": "sf-flex-encore-vuejs",
  "version": "0.0.3",
  "homepage": "https://github.com/Rebolon/php-sf-flex-webpack-encore-vuejs",
  "license": "MIT License",
  "private": true,
  "config": {
    "php": "php",
    "server_host_web": "localhost",
    "server_port_web": "80",
    "server_port_asset": "8080",
    "test_browser": "chrome:headless,firefox",
    "quasar_style": "mat",
    "app_version_prefix": "v1.0"
  },
  "scripts": {
    "init-project": "[ -f .env ] && echo '.env file already exists' || cp .env.dist .env && cp phpunit.xml.dist phpunit.xml && composer install && npm install && npm run db-init && npm run dump-js-config && cd assets/js/form-devxpress-angular/ && npm install && cd ../../../ && npm run dev && php bin/console assets:install --symlink && npm run jwt-init && echo 'change right on config/jwt/* to 444 for your web user' && composer dump-env prod",
    "init-project:w": "cp .env.dist .env && cp phpunit.xml.dist phpunit.xml && composer install && npm install && npm run db-init:w && npm run dump-js-config:w && cd assets/js/form-devxpress-angular/ && npm install && cd ../../../ && npm run dev:w && cd vendor/bin/.phpunit/phpunit* && composer install && cd ../../../../ && php bin/console assets:install --symlink && npm run jwt-init:w && echo 'change right on config/jwt/* to 444 for your web user' && composer dump-env prod",
    "db-init": "$npm_package_config_php bin/console doctrine:database:create && $npm_package_config_php bin/console doctrine:schema:create && $npm_package_config_php bin/console doctrine:migrations:migrate -n && $npm_package_config_php bin/console doctrine:fixtures:load -n",
    "db-init:w": "%npm_package_config_php% bin/console doctrine:database:create && %npm_package_config_php% bin/console doctrine:schema:create && %npm_package_config_php% bin/console doctrine:migrations:migrate -n && %npm_package_config_php% bin/console doctrine:fixtures:load -n",
    "jwt-init": "echo 'Use the same passphrase that is your .env file' && mkdir -p config/jwt && npm run jwt-generation && npm run jwt-generation-test",
    "jwt-init:w": "echo 'Use the same passphrase that is your .env file' && mkdir -p config\\jwt && npm run jwt-generation:win && npm run jwt-generation-test:win",
    "jwt-generation": "cd config/jwt && openssl genrsa -out private.pem -aes256 4096 && openssl rsa -pubout -in private.pem -out public.pem && cd ../..",
    "jwt-generation:w": "cd config\\jwt && openssl genrsa -out private.pem -aes256 4096 && openssl rsa -pubout -in private.pem -out public.pem && cd ..\\..",
    "jwt-generation-test": "echo 'Certificates generation for tests, use the following passphrase: test' && mkdir -p var/cache/config/jwt-test && cp var/travis/jwt-test/* var/cache/config/jwt-test",
    "jwt-generation-test:w": "echo 'Certificates generation for tests, use the following passphrase: test' && cd var\\\\cache && mkdir config\\\\jwt-test && cd ..\\\\.. && cp var/travis/jwt-test/* var/cache/config/jwt-test",
    "dump-js-config": "rm assets/js/config.js -f && $npm_package_config_php bin/console app:dump-js-config $npm_package_config_server_host_web $npm_package_config_server_port_web $npm_package_config_quasar_style",
    "dump-js-config:w": "rm assets/js/config.js -f && %npm_package_config_php% bin/console app:dump-js-config %npm_package_config_server_host_web% %npm_package_config_server_port_web% %npm_package_config_quasar_style%",
    "sf-dev": "echo 'you should use nginx/apache server, read the README' && $npm_package_config_php -S $npm_package_config_server_host_web:$npm_package_config_server_port_web -t public",
    "sf-dev:w": "echo 'you should use nginx/apache server, read the README' && %npm_package_config_php% -S %npm_package_config_server_host_web%:%npm_package_config_server_port_web% -t public",
    "dev-server": "./node_modules/.bin/encore dev-server --port $npm_package_config_server_port_asset",
    "dev-server:w": ".\\node_modules\\.bin\\encore dev-server --port %npm_package_config_server_port_asset%",
    "dev-server-hot": "./node_modules/.bin/encore dev-server --hot --port $npm_package_config_server_port_asset",
    "dev-server-hot:w": ".\\node_modules\\.bin\\encore dev-server --hot --port %npm_package_config_server_port_asset%",
    "dev": "./node_modules/.bin/encore dev && cd assets/js/form-devxpress-angular/ && node_modules/.bin/ng build --extract-css",
    "dev:w": ".\\node_modules\\.bin\\encore dev && cd assets/js/form-devxpress-angular/ && node_modules\\.bin\\ng build --extract-css",
    "watch": "./node_modules/.bin/encore dev --watch && cd assets/js/form-devxpress-angular/ && node_modules/.bin/ng build --watch --extract-css",
    "watch:w": "START /B .\\node_modules\\.bin\\encore dev --watch && cd assets/js/form-devxpress-angular/ && node_modules\\.bin\\ng build --watch --extract-css",
    "build": "./node_modules/.bin/encore production && cd assets/js/form-devxpress-angular/ && node_modules/.bin/ng build --prod --aot --build-optimizer  --vendor-chunk --common-chunk --lazyModules --optimization=true --extract-css --base-href dist-ng/devxpress --progress --stats-json",
    "build:w": ".\\node_modules\\.bin\\encore production && cd assets/js/form-devxpress-angular/ && node_modules\\.bin\\ng build --prod --aot --build-optimizer  --vendor-chunk --common-chunk --lazyModules --optimization=true --extract-css --base-href dist-ng/devxpress --progress --stats-json",
    "test-karma": "./node_modules/.bin/karma start karma.conf.js --single-run",
    "test-karma-watch": "./node_modules/.bin/karma start karma.conf.js",
    "test-php": "npm run dev && rm -rf var/cache/test && ./vendor/bin/simple-phpunit",
    "test-php:w": "npm run dev:w && rm -rf var/cache/test  && .\\vendor\\bin\\simple-phpunit.bat",
    "test": "npm run dev && npm run test-php && npm run test-karma && cd assets/js/form-devxpress-angular/ && node_modules/.bin/ng test && node_modules/.bin/ng e2e",
    "test:w": "npm run dev:w && npm run test-php:w && npm run test-karma && cd assets/js/form-devxpress-angular/ && node_modules\\.bin\\ng test && node_modules\\.bin\\ng e2e",
    "git-diff": "git log $from..$to --merges --oneline --decorate | sed \"/'master' into/d\" | sed 's/Merge branch //'",
    "git-diff:w": "git log %from..%to --merges --oneline --decorate | sed \"/'master' into/d\" | sed 's/Merge branch //'",
    "git-count-commit": "git rev-list HEAD --count",
    "git-get-version-from-git": "app_version=$(npm run git-count-commit | sed '$!d') && [ $(expr $app_version : '[0-9]*$') -gt 0 ] && app_version=${npm_package_config_app_version_prefix}.${tom_version} && [ -z \"$VERSION_POSTFIX\" ] && echo 'Variable VERSION_POSTFIX not setted' || app_version=$app_version-$VERSION_POSTFIX && app_version_hash=$(git log -n 1 --pretty=format:%H) && npm config set app_version $app_version && npm config set appversion_hash $app_version_hash"
  },
  "dependencies": {
    "@api-platform/admin": "0.6.2",
    "@rebolon/json-reviver": "^0.0.9",
    "apollo-cache-inmemory": "^1.5.1",
    "apollo-client": "^2.5.1",
    "apollo-link": "^1.2.9",
    "apollo-link-error": "^1.1.8",
    "apollo-link-http": "^1.5.12",
    "axios": "^0.18.0",
    "devextreme": "^18.2.6",
    "devextreme-vue": "^18.2.6",
    "graphql": "^14.1.1",
    "graphql-tag": "^2.10.1",
    "jquery": "^3.5.1",
    "offline-plugin": "^5.0.6",
    "prop-types": "^15.7.2",
    "quasar-extras": "^1.0.3",
    "quasar-framework": "^0.15.15",
    "react": "^16.8.6",
    "react-dom": "^16.8.6",
    "rxjs": "^6.4.0",
    "uglifyjs-webpack-plugin": "^2.1.2",
    "vue": "^2.6.8",
    "vue-apollo": "^3.0.0-beta.28",
    "vue-router": "^3.0.2",
    "vuelidate": "^0.7.4"
  },
  "devDependencies": {
    "@babel/preset-env": "^7.3.4",
    "@babel/preset-react": "^7.0.0",
    "@babel/runtime-corejs3": "^7.5.5",
    "@symfony/webpack-encore": "^0.27.0",
    "bootstrap": "^4.3.1",
    "codelyzer": "^5.0.1",
    "core-js": "^3.1.4",
    "create-react-app": "^3.0.1",
    "jasmine": "^3.3.1",
    "karma": "^4.0.1",
    "karma-chrome-launcher": "^2.2.0",
    "karma-firefox-launcher": "^1.1.0",
    "karma-jasmine": "^2.0.1",
    "karma-jasmine-html-reporter": "^1.4.0",
    "karma-junit-reporter": "^1.2.0",
    "karma-spec-reporter": "0.0.32",
    "karma-webpack": "3.0.0",
    "node-sass": "^4.11.0",
    "prettier": "^1.16.4",
    "rxjs-tslint": "^0.1.7",
    "sass-loader": "^7.1.0",
    "stylus": "^0.54.5",
    "stylus-loader": "^3.0.2",
    "ts-loader": "^5.3.3",
    "vue-loader": "^15.7.0",
    "vue-template-compiler": "^2.6.8",
    "webpack-notifier": "^1.6.0"
  },
  "browserslist": "> 1%"
}
