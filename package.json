{
    "name": "sf-flex-encore-vuejs",
    "version": "0.0.1",
    "homepage": "https://github.com/Rebolon/php-sf-flex-webpack-encore-vuejs",
    "license": "MIT License",
    "private": true,
    "config": {
        "php": "php",
        "server_host_web": "localhost",
        "server_port_web": "80",
        "server_port_asset": "8080",
        "test_browser": "chrome:headless,firefox",
        "quasar_style": "mat"
    },
    "scripts": {
        "init-project": "[ -f .env ] && echo '.env file already exists' || cp .env.dist .env && cp phpunit.xml.dist phpunit.xml && composer install && npm install && npm run db-init && npm run dump-js-config && cd assets/js/form-devxpress-angular/ && npm install && cd ../../../ && npm run dev",
        "init-project:win": "cp .env.dist .env && cp phpunit.xml.dist phpunit.xml && composer install && npm install && npm run db-init:win && npm run dump-js-config:win && cd assets/js/form-devxpress-angular/ && npm install && cd ../../../ && npm run dev:win",
        "db-init": "$npm_package_config_php bin/console doctrine:database:create && $npm_package_config_php bin/console doctrine:schema:create && $npm_package_config_php bin/console doctrine:fixtures:load -n",
        "db-init:win": "%npm_package_config_php% bin/console doctrine:database:create && %npm_package_config_php% bin/console doctrine:schema:create && %npm_package_config_php% bin/console doctrine:fixtures:load -n",
        "jwt-init": "echo 'Use the same passphrase that is your .env file' && mkdir -p config/jwt && npm run jwt-generation && npm run jwt-generation-test",
        "jwt-init:win": "echo 'Use the same passphrase that is your .env file' && mkdir -p config\\jwt && npm run jwt-generation:win && npm run jwt-generation-test:win",
        "jwt-generation": "cd config/jwt && openssl genrsa -out private.pem -aes256 4096 && openssl rsa -pubout -in private.pem -out public.pem && cd ../..",
        "jwt-generation:win": "cd config\\jwt && openssl genrsa -out private.pem -aes256 4096 && openssl rsa -pubout -in private.pem -out public.pem && cd ..\\..",
        "jwt-generation-test": "echo 'Certificates generation for tests, use the following passphrase: test' && mkdir -p var/cache/config/jwt-test && cp var/travis/jwt-test/* var/cache/config/jwt-test",
        "jwt-generation-test:win": "echo 'Certificates generation for tests, use the following passphrase: test' && cd var\\cache && mkdir config\\jwt-test && cd ..\\.. && cp var/travis/jwt-test/* var/cache/config/jwt-test",
        "dump-js-config": "rm assets/js/config.js -f && $npm_package_config_php bin/console app:dump-js-config $npm_package_config_server_host_web $npm_package_config_server_port_web $npm_package_config_quasar_style",
        "dump-js-config:win": "rm assets/js/config.js -f && %npm_package_config_php% bin/console app:dump-js-config %npm_package_config_server_host_web% %npm_package_config_server_port_web% %npm_package_config_quasar_style%",
        "sf-dev": "echo 'you should use nginx/apache server, read the README' && $npm_package_config_php -S $npm_package_config_server_host_web:$npm_package_config_server_port_web -t public",
        "sf-dev:win": "echo 'you should use nginx/apache server, read the README' && %npm_package_config_php% -S %npm_package_config_server_host_web%:%npm_package_config_server_port_web% -t public",
        "dev-server": "./node_modules/.bin/encore dev-server --port $npm_package_config_server_port_asset",
        "dev-server:win": ".\\node_modules\\.bin\\encore dev-server --port %npm_package_config_server_port_asset%",
        "dev-server-hot": "./node_modules/.bin/encore dev-server --hot --port $npm_package_config_server_port_asset",
        "dev-server-hot:win": ".\\node_modules\\.bin\\encore dev-server --hot --port %npm_package_config_server_port_asset%",
        "dev": "./node_modules/.bin/encore dev && cd assets/js/form-devxpress-angular/ && node_modules/.bin/ng build --extract-css",
        "dev:win": ".\\node_modules\\.bin\\encore dev && cd assets/js/form-devxpress-angular/ && node_modules\\.bin\\ng build --extract-css",
        "watch": "./node_modules/.bin/encore dev --watch && cd assets/js/form-devxpress-angular/ && node_modules/.bin/ng build --watch --extract-css",
        "watch:win": "START /B .\\node_modules\\.bin\\encore dev --watch && cd assets/js/form-devxpress-angular/ && node_modules\\.bin\\ng build --watch --extract-css",
        "build": "./node_modules/.bin/encore production && cd assets/js/form-devxpress-angular/ && node_modules/.bin/ng build --prod --aot --extract-css",
        "build:win": ".\\node_modules\\.bin\\encore production && cd assets/js/form-devxpress-angular/ && node_modules\\.bin\\ng build --prod --aot --extract-css",
        "build-for-test": "./node_modules/.bin/encore dev",
        "build-for-test:win": ".\\node_modules\\.bin\\encore dev",
        "test-cafe": "./node_modules/.bin/testcafe $npm_package_config_test_browser ./assets/tests  --reporter spec,xunit:var/report/testcafe.xml",
        "test-cafe-skip": "./node_modules/.bin/testcafe $npm_package_config_test_browser ./assets/tests/*.js  --reporter spec,xunit:var/report/testcafe.xml --skip-js-errors",
        "test-cafe:win": ".\\node_modules\\.bin\\testcafe %npm_package_config_test_browser% ./assets/tests  --reporter  spec,xunit:var/report/testcafe.xml",
        "test-cafe-skip:win": ".\\node_modules\\.bin\\testcafe %npm_package_config_test_browser% ./assets/tests/*.js --reporter spec,xunit:var/report/testcafe.xml --skip-js-errors",
        "test-karma": "./node_modules/.bin/karma start assets/tests/units/karma.conf.js --single-run",
        "test-karma-watch": "./node_modules/.bin/karma start assets/tests/units/karma.conf.js",
        "test-php": "npm run build-for-test && ./vendor/bin/simple-phpunit",
        "test-php:win": "npm run build-for-test:win && .\\vendor\\bin\\simple-phpunit.bat",
        "test": "npm run dev && npm run test-php && npm run test-karma && npm run test-cafe && cd assets/js/form-devxpress-angular/ && node_modules/.bin/ng test && node_modules/.bin/ng e2e",
        "test:win": "npm run dev:win && npm run test-php:win && npm run test-karma && npm run test-cafe:win && cd assets/js/form-devxpress-angular/ && node_modules\\.bin\\ng test && node_modules\\.bin\\ng e2e"
    },
    "dependencies": {
        "@api-platform/admin": "^0.4.2",
        "@rebolon/json-reviver": "0.0.7",
        "apollo-cache-inmemory": "^1.2.1",
        "apollo-client": "^2.3.1",
        "apollo-link": "^1.2.2",
        "apollo-link-error": "^1.1.0",
        "apollo-link-http": "^1.5.4",
        "axios": "^0.18.0",
        "devextreme": "^18.2.3",
        "devextreme-vue": "^18.2.3",
        "graphql": "^0.13.2",
        "graphql-tag": "^2.9.2",
        "offline-plugin": "^5.0.3",
        "prop-types": "^15.6.2",
        "quasar-extras": "^1.0.3",
        "quasar-framework": "^0.15.15",
        "react": "^16.4.1",
        "react-dom": "^16.4.1",
        "rxjs": "^6.1.0",
        "vue": "^2.5.16",
        "vue-apollo": "^3.0.0-beta.10",
        "vue-router": "^3.0.1",
        "vuelidate": "^0.6.2"
    },
    "devDependencies": {
        "@angular/cli": "^1.7.4",
        "@symfony/webpack-encore": "^0.20.1",
        "babel-preset-es2017": "^6.24.1",
        "babel-preset-react": "^6.24.1",
        "bootstrap": "^4.1.1",
        "create-react-app": "^1.5.2",
        "jasmine": "^3.0.0",
        "karma": "^2.0.4",
        "karma-chrome-launcher": "^2.2.0",
        "karma-jasmine": "^1.1.2",
        "karma-jasmine-html-reporter": "^1.1.0",
        "karma-junit-reporter": "^1.2.0",
        "karma-spec-reporter": "0.0.32",
        "karma-webpack": "^3.0.0",
        "node-sass": "^4.9.0",
        "prettier": "^1.13.5",
        "rxjs-tslint": "^0.1.5",
        "sass-loader": "^7.0.3",
        "testcafe": "^0.20.3",
        "testcafe-vue-selectors": "^3.0.0",
        "vue-loader": "^14.2.2",
        "vue-template-compiler": "^2.5.16"
    }
}
