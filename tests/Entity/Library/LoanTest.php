<?php

namespace App\Tests\Entity\Library;

use App\Entity\Library\Author;
use App\Entity\Library\Book;
use App\Entity\Library\Job;
use App\Entity\Library\Loan;
use App\Entity\Library\ProjectBookCreation;
use App\Entity\Library\Reader;
use App\Tests\Common\ApiAbstract;
use App\Tests\Common\ToolsAbstract;
use App\Tests\Common\WebPagesAbstract;
use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\DBAL\DBALException;
use PHPUnit\Framework\TestCase;

class LoanTest extends WebPagesAbstract
{
    use \App\Tests\Common\TestCase;

    /**
     * @var Book
     */
    public Book $book;

    /**
     * @var Reader
     */
    public Reader $owner;

    /**
     * @var Reader
     */
    public Reader $borrower;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->book = new Book();
        $this->book->setTitle('Test BookTest');

        $this->owner = new Reader();
        $this->owner
            ->setId(1)
            ->setEmail('johndo@gmail.com')
            ->setFirstname('John')
            ->setLastname('Do')
            ->addBook($this->book);

        $this->borrower = new Reader();
        $this->borrower
            ->setId(2)
            ->setEmail('nashjackson@orange.com')
            ->setFirstname('Nash')
            ->setLastname('Jackson');
    }

    public function testDoLoan()
    {
        $loan = new Loan();
        $loan->setBook($this->book)
            ->setLoaner($this->owner)
            ->setBorrower($this->borrower)
            ->setStartLoan(new \DateTimeImmutable(new \DateInterval('P1D')));

        $this->assertEquals($this->borrower, $loan->getBorrower());
        $this->assertEquals($this->owner, $loan->getLoaner());
    }
}
