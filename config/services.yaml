# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    csrf_token_parameter: '_csrf_token'
    csrf_token_id: 'thisIsMyTokenID_sdf468xcv*/;7{d5!LMM}'
    login_username_path: 'login_username'
    login_password_path: 'login_password'
    # must be the same value as the firewall key for json_login
    provider_id: 'security_json'
    api_platform_prefix: '/api'
    token_jwt_ttl: 3600
    token_jwt_bearer: 'Bearer'

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false
        # new way of injecting parameters to services
        # @todo But it doesn't seem to work for Controllers, why ?
        # maybe to prevent bug when paramName is the same as the requestParamArgument ?
        bind:
            $csrfTokenParameter: '%csrf_token_parameter%'
            $csrfTokenId: '%csrf_token_id%'
            $loginUsernamePath : '%login_username_path%'
            $loginPasswordPath : '%login_password_path%'
            $providerKey : '%provider_id%'
            $apiPlatformPrefix: '%api_platform_prefix%'
            $tokenJwtTtl: '%token_jwt_ttl%'
            $tokenJwtBearer: '%token_jwt_bearer%'
            $kernelProjectDir: '%kernel.project_dir%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../src/{Entity,Migrations,Repository,Tests}'

    # controllers are imported separately to make sure they
    # have the tag that allows actions to type-hint services
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # overloaded controllers for ApiPlatform @issue: https://github.com/api-platform/api-platform/issues/537
    App\Action\:
        resource: '../src/Action'
        tags: ['controller.service_arguments']

    # to overload the Swagger API documentation with my own decorator: App\Swagger\SwaggerDecorator.php
    App\Swagger\SwaggerDecorator:
        decorates: 'api_platform.swagger.normalizer.documentation'
        arguments: [ '@App\Swagger\SwaggerDecorator.inner' ]
        autoconfigure: false

    App\DataFixtures\ConnectionFixtures:
        public: true
        arguments:
            - '@doctrine.dbal.fixtures_connection'

    App\Security\JwtTokenTools:
        public: true

    App\Request\ParamConverter\Library\AuthorConverter:
        public: true
        tags:
            - { name: request.param_converter, priority: -2, converter: author }

    App\Request\ParamConverter\Library\BookConverter:
        public: true
        tags:
            - { name: request.param_converter, priority: -2, converter: book }

    App\Request\ParamConverter\Library\EditorConverter:
        public: true
        tags:
            - { name: request.param_converter, priority: -2, converter: editor }

    App\Request\ParamConverter\Library\JobConverter:
        public: true
        tags:
            - { name: request.param_converter, priority: -2, converter: job }

    App\Request\ParamConverter\Library\ProjectBookCreationConverter:
        public: true
        tags:
            - { name: request.param_converter, priority: -2, converter: authors }

    App\Request\ParamConverter\Library\ProjectBookEditionConverter:
        public: true
        arguments:
            - '@validator'
        tags:
            - { name: request.param_converter, priority: -2, converter: editors }

    App\Request\ParamConverter\Library\SerieConverter:
        public: true
        tags:
            - { name: request.param_converter, priority: -2, converter: serie }

    # needs to alias the current security.user.provider.concrete.in_memory to the class (seems not done in sf or security bundle)
    Symfony\Component\Security\Core\User\InMemoryUserProvider:
        alias: security.user.provider.concrete.in_memory

    App\DataProvider\PingDataProvider: ~
